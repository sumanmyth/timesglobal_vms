from rest_framework import serializers
from .models import Task
from locations.models import Location
from locations.serializers import LocationSerializer

class TaskSerializer(serializers.ModelSerializer):
    location = LocationSerializer(read_only=True) # For displaying location details
    location_id = serializers.PrimaryKeyRelatedField(
        queryset=Location.objects.all(), source='location', write_only=True # For creating/updating with location ID
    )
    # job_id is now auto-generated by the model's save method, so it should be read-only in the API
    job_id = serializers.CharField(read_only=True) 

    class Meta:
        model = Task
        fields = [
            'id', 
            'location', 'location_id', # location for display, location_id for write
            'job_date', 
            'job_id', # Now read-only from API perspective
            'job_title', 
            'full_name', 
            'company_name', 
            'company_location', 
            'rack_number', 
            'job_description', 
            'contact', 
            'encoded_by',
            'is_completed',
            'completed_at',
            'created_by_name', # Added
            'created_by_email',# Added
            'created_at', 
            'updated_at'
        ]
        read_only_fields = (
            'id', 
            'job_id', # Make job_id read-only as it's auto-generated
            'completed_at', # completed_at is set by server logic in view
            'created_by_name', 
            'created_by_email',
            'created_at', 
            'updated_at'
        )

    # The create method can be simple if perform_create in view handles extra fields like created_by_*
    # If perform_create is not overridden in TaskViewSet and BaseLocationScopedViewSet is used,
    # then BaseLocationScopedViewSet.perform_create will pass created_by_name/email to serializer.save().
    # The model's __init__ must accept these or serializer.save() should pass them to model's save()
    # The current Task model does not have created_by_* in __init__ by default,
    # but serializer.save() can pass them as kwargs to model.save() if they are fields on the model.
    # Since created_by_name/email are now model fields, this should work fine with the
    # BaseLocationScopedViewSet.perform_create method.